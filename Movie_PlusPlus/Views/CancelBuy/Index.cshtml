@model Movie_Plus.Services.Pager.GenericPager<Movie_Plus.Data.Buy_Ticket>

<h1>My Buys</h1>

@*CÓDIGO PARA EL FILTRO DE BÚSQUEDA*@
<div class="text-right form-inline">
    <form method="get" action=@Url.Action("Index", "CancelBuy" )>
        <div class="form-group">
            @Html.TextBox("_code", null, new
            {
                placeholder = "Insert Buy Code Here",
                @class = "form-control"
            })

            @Html.TextBox("_title", null, new
            {
                placeholder = "Insert Title Here",
                @class = "form-control"
            })

            @Html.TextBox("_localMovie", null, new
            {
                placeholder = "Insert Movie Local Here",
                @class = "form-control"
            })

        </div>
        <div class="form-group">

            Min Date: <div class="form-group">
                <label class="control-label"></label>
                <input name="_minDate" type="date" class="form-control" />
                <span class="text-danger"></span>
            </div>

            Max Date: <div class="form-group">
                <label class="control-label"></label>
                <input name="_maxDate" type="date" class="form-control" />
                <span class="text-danger"></span>
            </div>

        </div>
        <button class="btn btn-default" type="submit">Search</button>
    </form>
</div>
<table class="table">
    <thead>
        <tr>
            <th>
                Date
            </th>
            <th>
                Hour
            </th>
            <th>
                Movie Local
            </th>
            <th>
                Movie
            </th>
            <th>
                Payment
            </th>
            <th>
                Date Of Payment
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Result)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Horary.Date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Horary.Time)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Horary.Movie_Local.Local_Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Horary.Movie.Title)
                </td>
                @if ((bool)item.PayWithPoints)
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.Payment) Points
                    </td>
                }
                else
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.Payment)
                    </td>
                }
                <td>
                    @Html.DisplayFor(modelItem => item.Date)
                </td>
                @if (DateTime.Now.AddHours(2) < item.Horary.Date.AddSeconds(item.Horary.Time.TimeOfDay.TotalSeconds))
                {
                    <td>
                        <a asp-action="Cancel" asp-route-id="@item.Id">Cancel Buy</a> |
                        <a asp-controller="BuyEntrance" asp-action="ViewVoucher" asp-route-id="@item.Id">View Voucher</a>
                    </td>
                }
                else
                {
                    <td>
                        Cancel Buy |
                        <a asp-controller="BuyEntrance" asp-action="ViewVoucher" asp-route-id="@item.Id">View Voucher</a>
                    </td>
                }

            </tr>
        }
        @if (TempData.ContainsKey("Success"))
        {
            @:<script>alert('@TempData["Success"]');</script>
        }
    </tbody>
</table>

@*PAGER*@

@if (Model.Result.Count() > 0)
{
    <span>
        <strong>@Model.TotalRegisters</strong> Registers found
    </span>
    <span>&nbsp;|&nbsp;</span>
    <span>
        Page <strong>@(Model.ActualPage)</strong> of
        <strong>@Model.TotalPages</strong>
    </span>
    <span>&nbsp;|&nbsp;</span>
}
else
{
    <span>No results</span>
    <span>&nbsp;|&nbsp;</span>
}

@if (Model.ActualPage > 1)
{
    @Html.ActionLink("<<", "Index", new { page = 1 },
                    new { @class = "btn btn-sm btn-default" })
    <span></span>
    @Html.ActionLink("Previous", "Index", new { page = Model.ActualPage - 1 },
                    new { @class = "btn btn-sm btn-default" })
}
else
{
    @Html.ActionLink("<<", "Index", new { page = 1 },
                    new { @class = "btn btn-sm btn-default disabled" })
    <span></span>
    @Html.ActionLink("Previous", "Index", new { page = 1 },
                    new { @class = "btn btn-sm btn-default disabled" })
}
<span></span>
@if (Model.ActualPage < Model.TotalPages)
{
    @Html.ActionLink("Next", "Index", new { page = Model.ActualPage + 1 },
                    new { @class = "btn btn-sm btn-default" })
    <span></span>
    @Html.ActionLink(">>", "Index", new { page = Model.TotalPages },
                    new { @class = "btn btn-sm btn-default" })
}
else
{
    @Html.ActionLink("Next", "Index", new { page = Model.TotalPages - 1 },
                    new { @class = "btn btn-sm btn-default disabled" })
    <span></span>
    @Html.ActionLink(">>", "Index", new { page = Model.TotalPages },
                    new { @class = "btn btn-sm btn-default disabled" })
}
